name: Build and Push Docker images

env:
    REGISTRY: ghcr.io

on:
  push:
    branches: [ main ]
    paths:
      - 'mail_poller/**'
      - 'llm_agent/**'
      - 'money_bot/**'

jobs:
  build_mail_poller:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.modified, 'mail_poller/') ||
      contains(github.event.head_commit.added, 'mail_poller/') ||
      contains(github.event.head_commit.removed, 'mail_poller/') ||
      contains(github.event.head_commit.modified, 'poetry.lock')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      
      - name: Build and push mail_poller image
        uses: docker/build-push-action@v5
        with:
          file: mail_poller/.dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/mail_poller:latest
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository_owner }}/mail_poller:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository_owner }}/mail_poller:buildcache,mode=max
  
  build_llm_agent:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.modified, 'llm_agent/') ||
      contains(github.event.head_commit.added, 'llm_agent/') ||
      contains(github.event.head_commit.removed, 'llm_agent/') ||
      contains(github.event.head_commit.modified, 'poetry.lock')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      
      - name: Build and push llm_agent image
        uses: docker/build-push-action@v5
        with:
          file: llm_agent/.dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/llm_agent:latest
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository_owner }}/llm_agent:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository_owner }}/llm_agent:buildcache,mode=max
  
  build_money_bot:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.modified, 'money_bot/') ||
      contains(github.event.head_commit.added, 'money_bot/') ||
      contains(github.event.head_commit.removed, 'money_bot/') ||
      contains(github.event.head_commit.modified, 'poetry.lock')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      
      - name: Build and push money_bot image
        uses: docker/build-push-action@v5
        with:
          file: money_bot/.dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/money_bot:latest
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository_owner }}/money_bot:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository_owner }}/money_bot:buildcache,mode=max